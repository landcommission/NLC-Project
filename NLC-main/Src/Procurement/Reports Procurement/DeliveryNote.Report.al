#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
Report 50080 "Delivery Note"
{
    WordLayout = './Layouts/DeliveryNote.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem("Store Requistion Headers"; "Store Requistion Headers")
        {
            DataItemTableView = sorting("No.");
            RequestFilterFields = "No.";
            column(ReportForNavId_1826; 1826) { } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_Table52193901; ReportForNavWriteDataItem('Table52193901', "Store Requistion Headers")) { }
            column(Store_Requistion_Header__Required_Date_; "Required Date")
            {
            }
            column(Store_Requistion_Header__Request_date_; "Request date")
            {
            }
            column(Store_Requistion_Header__Request_Description_; "Request Description")
            {
            }
            column(Store_Requistion_Header__Shortcut_Dimension_2_Code_; "Shortcut Dimension 2 Code")
            {
            }
            column(Store_Requistion_Header__Budget_Center_Name_; "Budget Center Name")
            {
            }
            column(Store_Requistion_Header__No__; "No.")
            {
            }
            column(Store_Requistion_Header__Global_Dimension_1_Code_; "Global Dimension 1 Code")
            {
            }
            column(Store_Requistion_Header__Function_Name_; "Function Name")
            {
            }
            column(Date_Caption; Date_CaptionLbl)
            {
            }
            column(Name_Caption; Name_CaptionLbl)
            {
            }
            column(RecipientCaption; RecipientCaptionLbl)
            {
            }
            column(Signature_Caption_Control1102755000; Signature_Caption_Control1102755000Lbl)
            {
            }
            column(DocHeader; DocHeader)
            {
            }
            column(CompanyInfoName; CompanyInfo.Name)
            {
            }
            column(CompanyInfoAdd; CompanyInfo.Address)
            {
            }
            column(CompanyInfoPicture; CompanyInfo.Picture)
            {
            }
            dataitem("Store Requistion Line"; "Store Requistion Line")
            {
                DataItemLink = "Requistion No" = field("No.");
                DataItemTableView = sorting("Requistion No", "Line No.") order(ascending);
                column(ReportForNavId_7187; 7187) { } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_Table52193902; ReportForNavWriteDataItem('Table52193902', "Store Requistion Line")) { }
                column(Store_Requistion_Lines__No__; "No.")
                {
                }
                column(Store_Requistion_Lines_Description; Description)
                {
                }
                column(Store_Requistion_Lines__Unit_of_Measure_; "Unit of Measure")
                {
                }
                column(Store_Requistion_Lines__Line_Amount_; "Line Amount")
                {
                }
                column(Store_Requistion_Lines__Unit_Cost_; "Unit Cost")
                {
                }
                column(QuantityDelivered_StoreRequistionLine; "Store Requistion Line"."Quantity Delivered")
                {
                }

            }
            dataitem("Approval Entry"; "Approval Entry")
            {
                DataItemLink = "Document No." = field("No.");
                DataItemTableView = where("Document Type" = const(Rn), Status = const(Approved));
                column(ReportForNavId_1102755003; 1102755003) { } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_Table454; ReportForNavWriteDataItem('Table454', "Approval Entry")) { }
                column(SenderID_ApprovalEntry; "Approval Entry"."Sender ID")
                {
                }
                column(ApproverID_ApprovalEntry; "Approval Entry"."Approver ID")
                {
                }
                column(DateTimeSentforApproval_ApprovalEntry; "Approval Entry"."Date-Time Sent for Approval")
                {
                }
                column(LastDateTimeModified_ApprovalEntry; "Approval Entry"."Last Date-Time Modified")
                {
                }
            }


            trigger OnAfterGetRecord();
            begin
                if "Document Type" = "document type"::SR then
                    DocHeader := 'Staff Grant Requisition'
                else
                    DocHeader := 'Store Requisition';
                if Status = Status::Posted then begin
                    if "Document Type" = "document type"::SR then
                        DocHeader := 'Staff Grant Issue'
                    else
                        DocHeader := 'Store Issue'
                end
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
        }

    }

    trigger OnPreReport()
    begin
        CompanyInfo.Get;
        CompanyInfo.CalcFields(Picture)
        ;
        ReportsForNavPre;

    end;

    var
        Store_RequistionCaptionLbl: label 'Store Requistion';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        UoMCaptionLbl: label 'UoM';
        Date_CaptionLbl: label 'Date:';
        Name_CaptionLbl: label 'Name:';
        RecipientCaptionLbl: label 'Recipient';
        Printed_By_CaptionLbl: label 'Printed By:';
        Name_Caption_Control1102755052Lbl: label 'Name:';
        Date_Caption_Control1102755053Lbl: label 'Date:';
        Signature_CaptionLbl: label 'Signature:';
        AuthorisationsCaptionLbl: label 'Authorisations';
        EmptyStringCaptionLbl: label '================================================================================================================================================================================================';
        Signature_Caption_Control1102755000Lbl: label 'Signature:';
        DocHeader: Text;
        CompanyInfo: Record "Company Information";

    trigger OnInitReport();
    begin

    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var

        ReportForNavTotalsCausedBy: Integer;
        ReportForNavInitialized: Boolean;
        ReportForNavShowOutput: Boolean;



    local procedure ReportsForNavPre()
    begin
    end;

    local procedure ReportForNavSetTotalsCausedBy(value: Integer)
    begin
        ReportForNavTotalsCausedBy := value;
    end;

    local procedure ReportForNavSetShowOutput(value: Boolean)
    begin
        ReportForNavShowOutput := value;
    end;



    local procedure ReportForNavWriteDataItem(dataItemId: Text; rec: Variant): Text
    var
        values: Text;
        jsonObject: JsonObject;
        currLanguage: Integer;
    begin
        if not ReportForNavInitialized then begin

            ReportForNavInitialized := true;
        end;

        case (dataItemId) of
            'Table454':
                begin
                    currLanguage := GlobalLanguage;
                    GlobalLanguage := 1033;
                    jsonObject.Add('DataItem$Table454$CurrentKey$Text', "Approval Entry".CurrentKey);
                    GlobalLanguage := currLanguage;
                end;
        end;

        jsonObject.WriteTo(values);
        exit(values);
    end;
    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
