#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
Report 52193749 "Asset Barcode report Generator"
{
    Caption = 'Fixed Asset - Analysis';
    WordLayout = './Layouts/AssetBarcodereportGenerator.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem("Fixed Asset"; "Fixed Asset")
        {
            RequestFilterFields = "No.", "FA Class Code", "FA Subclass Code", "Budgeted Asset";
            column(ReportForNavId_3794; 3794) { } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_Table5600; ReportForNavWriteDataItem('Table5600', "Fixed Asset")) { }
            trigger OnPreDataItem();
            begin
                CompInfo.Get;
                BarcodeNo := NoSeriesMgt.GetNextNo('BARCD', 0D, true);
                //File1.Create(CompInfo."Barcode EFT" + BarcodeNo + '.CSV');
                File1.CreateOutstream(OutStreamObj);
                //ReportForNav.OnPreDataItem('Table5600', "Fixed Asset");
            end;

            trigger OnAfterGetRecord();
            begin
                OutStreamObj.WriteText("Fixed Asset"."No.");
                OutStreamObj.WriteText()
            end;

        }
    }
    requestpage
    {
        SaveValues = true;
        layout
        {
        }

    }
    var
        Text000: label 'Fixed Asset - Analysis';
        Text001: label '(Budget Report)';
        FASetup: Record "FA Setup";
        DeprBook: Record 5611;
        FADeprBook: Record "FA Depreciation Book";
        FAPostingType: Record 5644;
        FADateType: Record 5645;
        FAGenReport: Codeunit 5626;
        BudgetDepreciation: Codeunit 5615;
        FAFilter: Text;
        MainHeadLineText: Text[100];
        DeprBookText: Text[50];
        GroupCodeName: Text[80];
        GroupHeadLine: Text[50];
        FANo: Text[50];
        FADescription: Text[50];
        GroupTotals: Option " ","FA Class","FA Subclass","FA Location","Main Asset","Global Dimension 1","Global Dimension 2","FA Posting Group";
        GroupAmounts: array[3] of Decimal;
        TotalAmounts: array[3] of Decimal;
        HeadLineText: array[5] of Text[50];
        Amounts: array[3] of Decimal;
        Date: array[2] of Date;
        i: Integer;
        Period1: Option "before Starting Date","Net Change","at Ending Date";
        Period2: Option "before Starting Date","Net Change","at Ending Date";
        Period3: Option "before Starting Date","Net Change","at Ending Date";
        PostingType1: Text[30];
        PostingType2: Text[30];
        PostingType3: Text[30];
        PostingTypeNo1: Integer;
        PostingTypeNo2: Integer;
        PostingTypeNo3: Integer;
        DateType1: Text[30];
        DateType2: Text[30];
        DateTypeNo1: Integer;
        DateTypeNo2: Integer;
        StartingDate: Date;
        EndingDate: Date;
        DeprBookCode: Code[10];
        PrintDetails: Boolean;
        BudgetReport: Boolean;
        BeforeAmount: Decimal;
        EndingAmount: Decimal;
        AcquisitionDate: Date;
        DisposalDate: Date;
        SalesReport: Boolean;
        TypeExist: Boolean;
        CompInfo: Record "Company Information";
        BarcodeNo: Code[10];
        NoSeriesMgt: Codeunit 396;
        File1: File;
        OutStreamObj: OutStream;

    local procedure SkipRecord(): Boolean
    begin
    end;

    local procedure SetSalesMark(): Text[30]
    begin
    end;

    local procedure MakeGroupTotalText()
    begin
    end;

    trigger OnInitReport();
    begin

    end;

    trigger OnPreReport();
    begin
        ;
        ReportsForNavPre;
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var

        ReportForNavTotalsCausedBy: Integer;
        ReportForNavInitialized: Boolean;
        ReportForNavShowOutput: Boolean;



    local procedure ReportsForNavPre()
    begin
    end;

    local procedure ReportForNavSetTotalsCausedBy(value: Integer)
    begin
        ReportForNavTotalsCausedBy := value;
    end;

    local procedure ReportForNavSetShowOutput(value: Boolean)
    begin
        ReportForNavShowOutput := value;
    end;



    local procedure ReportForNavWriteDataItem(dataItemId: Text; rec: Variant): Text
    var
        values: Text;
        jsonObject: JsonObject;
        currLanguage: Integer;
    begin
        if not ReportForNavInitialized then begin

            ReportForNavInitialized := true;
        end;

        case (dataItemId) of
            'Table5600':
                begin
                    currLanguage := GlobalLanguage;
                    GlobalLanguage := 1033;
                    jsonObject.Add('DataItem$Table5600$CurrentKey$Text', "Fixed Asset".CurrentKey);
                    GlobalLanguage := currLanguage;
                end;
        end;

        jsonObject.WriteTo(values);
        exit(values);
    end;
    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
